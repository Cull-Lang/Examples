module main

Some<T> := struct {
	value: T
}

fun Some::new<T>(value: T): Some<T> {
	return Some{value: value}
}

None := struct {}

Option<T> := Some<T> | None

fun Option<T>.unwrap(): T {
	if this is None {
		panic("Option.unwrap called on None")
	} else {
		return this.value
	}
}


fun maybe(a: i32): Option<i32> {
	return Some::new(a) // Some<i32> is cast to Option<T>
}

main {
	num := maybe(123).unwrap()

	println(num) // 123
}
